eta_product19 = np.array([1, 0, -2, -2, 3, 0, -1, 0, 1, 0, 3, 4, -4, 0, -6, 4, -3, 0, 1, -6, 2, 0, 0, 0, 4, 0, 4, 2, 6, 0, -4, 0, -6, 0, -3, -2, 2, 0, 8, 0, -6, 0, -1, -6, 3, 0, -3, -8, -6, 0, 6, 8, 12, 0, 9, 0, -2, 0, -6, 12, -1, 0, -1, -8, -12, 0, -4, 6, 0, 0, 6, 0, -7, 0, -8, -2, -3, 0, 8, 12, -11, 0, 12, -4, -9, 0, -12, 0, 12, 0, 4, 0, 8, 0, 3, 0, 8, 0, 3, -8, 6, 0, 14, 0, 6, 0, -18, -8, -16, 0, -4, -4, 6, 0, 0, -12, -4, 0, 3, 0, -2, 0, 12, 8, -3, 0, 2, 0, 2, 0, -15, 12, -1, 0, 12, 0, -3, 0, -13, 6, 6, 0, -12, 4, 18, 0, 12, -4, 21, 0, -10, 0, -3, 0, -12, -16, 14, 0, -24, 0, 0, 0, 20, 12, -18, 0, -18, 0, 3, 0, 1, 2, -18, 0, -4, 12, 12, 0, -18, -6, 2, 0, 2, 0, 6, 0, -9, 6, -4, 0, 3, 16, -4, 0, 24, 12, 18, 0, 11, 0, 8, 0, -6, -12, -18, 0, 0, -16, 3, 0, 14, -24, -12, 0, -3, 0, 4, 0, 14, -18, 12, 0, -10, 0, 4, 0, 12, 4, 5, 0, 6, 0, -21, 0, -9, 12, -16, 0, 15, -24, -10, 0, 10, 2, -18, 0, -4, 0, -24, 0, 21, 2, 0, 0, 18, 16, 0, 0, -2, 24, 6, 0, 9, 0, 36, 0, -24, 8, 24, 0, -16, -12, -8, 0, 12, 0, -19, 0, -4, 0, 6, 0, -13, -12, -6, 0, 6, 0, -8, 0, -16, 14, -12, 0, -18, 0, 12, 0, 0, 16, 1, 0, -12, 4, -3, 0, 20, 6, -28, 0, -3, 0, -10, 0, -3, -16, 6, 0, 18, -24, 36, 0, -3, 22, -16, 0, 32, 0, 3, 0, -28, -24, 2, 0, -12, 8, 32, 0, -12, 18, -12, 0, 13, 0, 0, 0, 21, 24, 17, 0, -16, 0, -6, 0, 18, -24, -6, 0, 15, 0, 1, 0, 4, -8, -21, 0, 8, 0, -6, 0, -12, -16, -4, 0, 6, 0, -24, 0, -34, -6, -4, 0, 12, 0, -9, 0, -1, -16, 15, 0, 0, 0, 30, 0, 24, -6, -7, 0, 2, 16, 12, 0, 16, -12, -33, 0, 6, 0, -4, 0, 6, -28, 6, 0, 36, 0, 26, 0, -12, -12, 8, 0, -3, 0, -12, 0, 1, 36, 24, 0, -24, 16, 2, 0, -36, 32, 0, 0, -10, 0, -6, 0, -3, 8, 36, 0, -42, 8, 0, 0, -18, -12, 20, 0, 12, 0, -37, 0, -12, 0, 9, 0, -31, 24, 24, 0, -27, 8, 4, 0, -28, 0, -3, 0, 4, -6, 12, 0, -12, 0, -8, 0, 0, 4, 24, 0, 2, 0, -40, 0, 12, -24, -18, 0, 9, -16, -6, 0, 5, 6, 36, 0, 12, 0, 18, 0, -6, -4, 0, 0, 7, 0, 4, 0, 42, -4, -9, 0, 36, 0, 0, 0, 38, 30, 8, 0, 12, -24, -23, 0, -6, 2, 24, 0, -54, 0, 36, 0, -18, -24, -25, 0, -4, 0, -48, 0, -28, 6, -1, 0, 6, 0, -8, 0, -12, 26, 21, 0, 4, -12, 18, 0, 6, -12, 18, 0, 11, 0, -24, 0, -4, 24, -6, 0, 0, -8, 11, 0, 8, -36, -12, 0, 36, 0, -12, 0, 45, -24, -4, 0, -36, 8, -42, 0, 9, -42, -22, 0, -36, 0, 26, 0, -4, 20, -6, 0, 32, 0, 12, 0, 12, 6, 29, 0, 36, 0, 9, 0, 44, 24, 0, 0, -12, 32, -29, 0, -6, -28, -6, 0, 11, 0, -28, 0, 6, 48, 24, 0, 6, 0, 0, 0, -13, 0, 6, 0, 27, 0, -18, 0, -8, -40, -39, 0, -45, -24, -7, 0, -30, 36, 32, 0, -24, 0, -3, 0, 0, 36, 20, 0, -3, 0, -10, 0, 16, -6, -42, 0, -8, 0, -24, 0, 36, -2, -9, 0, -10, -4, -48, 0, 17, 36, -3, 0, -39, 0, 18, 0, 42, 8, 6, 0, 2, -24, 18, 0, -6, -24, 26, 0, 8, 0, 0, 0, -36, 36, -30, 0, 15, 12, -14, 0, 20, -4, 24, 0, -19, 0, 13, 0, 3, -4, -22, 0, 36, 0, -12, 0, 11, -12, 8, 0, -24, 0, 63, 0, 12, 18, 18, 0, 32, -12, -42, 0, -30, 8, -25, 0, 0, 0, 33, 0, 16, -6, -9, 0, 24, -32, 23, 0, 0, 8, -6, 0, -16, 0, 4, 0, -6, -48, 18, 0, 24, -24, 42, 0, -4, -36, -18, 0, -6, 0, 4, 0, -72, -22, -12, 0, 9, 0, 12, 0, -21, -16, 0, 0, -48, 0, -9, 0, -16, 12, 32, 0, 60, 24, -1, 0, 4, 36, 33, 0, -49, 0, -24, 0, 12, 0, -16, 0, 38, 32, 18, 0, -54, -6, -16, 0, 18, 0, 7, 0, -12, -28, 9, 0, 2, 48, 26, 0, 0, 24, 26, 0, 3, 0, 18, 0, -49, 6, -12, 0, 18, 0, -54, 0, 16, -8, 24, 0, 16, 0, 8, 0, 3, -28, -22, 0, 24, 36, -27, 0, 47, -24, 36, 0, 18, 0, -2, 0, -33, 20, -3, 0, -54, 0, 0, 0, -24, -8, -36, 0, -2, 0, 6, 0, 8, -24, 6, 0, -6, -8, 36, 0, 6, -10, 15, 0, 20, 0, -40, 0, -24, -12, 8, 0, 14, 0, -18, 0, -6, 42, 6, 0, -27, 0, -7, 0, 20, 18, -18, 0, 0, -24, -12, 0, -36, 32, 28, 0, -12, 0, -48, 0, 9, -30, -36, 0, 3, 48, -15, 0, -18, 20, -12, 0, -40, 0, 6, 0, 60, -20, 13, 0, 32, -4, 24, 0, 36, 36, -16, 0, -36, 0, 54, 0, -6, 8, 0, 0, -34, 0, 56, 0, 33, 48, 17, 0, 8, 0])
M = np.array([[4,1],[19,5]])
vplus = np.array([-2,1])
vminus = np.array([0,1])
gamma = np.array([0,1])
values = coeffs_calculator(eta_product19, M, vplus, vminus, gamma)
print('ε(M)=', values[5])
print('ω1=',values[3])
print('ω2=',values[4])
print('ω1/ω2',values[3]/values[4])
print('g4=', values[0])
print('g6=', values[1])
print('error4=', values[6])
print('error6=', values[7])
c4 = 12*values[0]
c6 = 216*values[1]
print('c4=',c4)
print('c6=',c6)
c4guess = round(c4.real)
c6guess = round(c6.real)
print('c4guess=',c4guess)
print('c6guess=',c6guess)
u = u_calculator(c4guess, c6guess)
print('u=',u)
c4prime = c4guess/(u**4)
c6prime = c6guess/(u**6)
a = a_calculator(c4prime, c6prime)
delta = (c4prime**3 - c6prime**2)/1728
expected_j = c4prime**3/delta
print('coeffs:',a)                    #order is (a_1,a_3,a_2,a_4,a_6)
print('Δ=',delta,'=',prime_decomp(delta))
print('j=', values[2])
print('expected j=',expected_j)
print('error=',abs(expected_j-values[2]))
